- query = klass.find_by id: settings[:query_id]
- query.column_names = settings[:columns].map(&:to_sym) if query && settings[:columns].present?

- if query
  .box
    = render_query_columns_selection query, name: "settings[#{block}][columns]"
    .tabular.settings
      p
        = additionals_settings_numberfield :max_entries,
                                           value: settings[:max_entries].presence || DashboardContent::DEFAULT_MAX_ENTRIES,
                                           tag_name: "settings[#{block}][max_entries]",
                                           min: 1, max: 100, required: true
      p
        = additionals_settings_checkbox :auto_refresh,
                                        label: l(:label_enable_auto_refresh),
                                        active_value: settings[:auto_refresh],
                                        tag_name: "settings[#{block}][auto_refresh]"
- else
  .box.tabular.settings
    p
      = additionals_settings_select :query_id,
                                    options_for_query_select(klass, @project),
                                    label: block_definition[:label],
                                    tag_name: "settings[#{block}][query_id]",
                                    required: true
    p
      = additionals_settings_numberfield :max_entries,
                                         value: settings[:max_entries].presence || DashboardContent::DEFAULT_MAX_ENTRIES,
                                         tag_name: "settings[#{block}][max_entries]",
                                         min: 1, max: 100, required: true
    p
      = additionals_settings_checkbox :auto_refresh,
                                      label: l(:label_enable_auto_refresh),
                                      active_value: settings[:auto_refresh],
                                      tag_name: "settings[#{block}][auto_refresh]"
